(function(){BX.namespace("BX.Call");BX.Call.AbstractCall=function(b){var a=this;this.id=b.id;this.instanceId=b.instanceId;this.parentId=b.parentId||null;this.direction=b.direction;this.ready=false;this.userId=BX.Call.Engine.getInstance().getCurrentUserId();this.initiatorId=b.initiatorId||"";this.users=BX.type.isArray(b.users)?b.users.filter(function(c){return c!=a.userId}):[];this.associatedEntity=BX.type.isPlainObject(b.associatedEntity)?b.associatedEntity:{};this.videoEnabled=b.videoEnabled===true;this.videoHd=b.videoHd===true;this.cameraId=b.cameraId||"";this.microphoneId=b.microphoneId||"";this.muted=b.muted===true;this.logToken=b.logToken||"";if(BX.CallEngine.getLogService()&&this.logToken){this.logger=new BX.Call.Logger(BX.CallEngine.getLogService(),this.logToken)}this.localStreams={main:null,screen:null};this.eventListeners={};if(BX.type.isPlainObject(b.events)){this.initEventListeners(b.events)}Object.defineProperty(this,"provider",{get:function(){if(this instanceof BX.Call.PlainCall){return BX.Call.Provider.Plain}else{if(this instanceof BX.Call.VoximplantCall){return BX.Call.VoximplantCall}else{return""}}}})};BX.Call.AbstractCall.prototype.initEventListeners=function(b){for(var a in b){this.addEventListener(a,b[a])}};BX.Call.AbstractCall.prototype.addEventListener=function(a,b){if(!BX.type.isArray(this.eventListeners[a])){this.eventListeners[a]=[]}if(BX.type.isFunction(b)){this.eventListeners[a].push(b)}};BX.Call.AbstractCall.prototype.removeEventListener=function(a,c){if(BX.type.isArray(this.eventListeners[a])&&this.eventListeners[a].indexOf(c)>=0){var b=this.eventListeners[a].indexOf(c);if(b>=0){this.eventListeners[a].splice(b,1)}}};BX.Call.AbstractCall.prototype.runCallback=function(a,d){if(BX.type.isArray(this.eventListeners[a])&&this.eventListeners[a].length>0){if(!BX.type.isPlainObject(d)){d={}}d.call=this;for(var b=0;b<this.eventListeners[a].length;b++){try{this.eventListeners[a][b].call(this,d)}catch(c){console.error(a+" callback error: ",c);this.log(a+" callback error: ",c)}}}};BX.Call.AbstractCall.prototype.getLocalStream=function(a){return this.localStreams[a]};BX.Call.AbstractCall.prototype.setLocalStream=function(b,a){a=a||"main";this.localStreams[a]=b};BX.Call.AbstractCall.prototype.isVideoEnabled=function(){return this.videoEnabled};BX.Call.AbstractCall.prototype.isAnyoneParticipating=function(){throw new Error("isAnyoneParticipating should be implemented")};BX.Call.AbstractCall.prototype.__onPullEvent=function(b,a){throw new Error("__onPullEvent should be implemented")};BX.Call.AbstractCall.prototype.inviteUsers=function(){throw new Error("inviteUsers is not implemented")};BX.Call.AbstractCall.prototype.cancel=function(){throw new Error("cancel is not implemented")};BX.Call.AbstractCall.prototype.answer=function(){throw new Error("answer is not implemented")};BX.Call.AbstractCall.prototype.decline=function(a,b){throw new Error("decline is not implemented")};BX.Call.AbstractCall.prototype.hangup=function(){throw new Error("hangup is not implemented")};BX.Call.AbstractCall.prototype.log=function(){var c=BX.Call.Util.getLogMessage.apply(BX.Call.Util,arguments);if(BX.desktop&&BX.desktop.ready()){BX.desktop.log(BX.message("USER_ID")+".video.log",c.substr(3))}if(BX.CallEngine.debugFlag&&console){var b=["Call log ["+BX.Call.Util.getTimeForLog()+"]: "];console.log.apply(this,b.concat(Array.prototype.slice.call(arguments)))}if(this.logger){this.logger.log(c)}if(BX.MessengerDebug){BX.MessengerDebug.addLog(this.id,c)}};BX.Call.AbstractCall.prototype.destroy=function(){if(this.logger){this.logger.destroy();this.logger=null}this.runCallback(BX.Call.Event.onDestroy)}})();